import torch

from trainable_frft.fracf_torch import bizdec, bizinter, corefrmod2


def test_bizdec() -> None:
    x1 = torch.tensor([1.0, 2.0, 3.0, 4.0])
    x2 = torch.tensor([1.0, 2.0, 3.0, 4.0, 5.0])
    y1 = bizdec(x1)
    y2 = bizdec(x2)
    assert torch.allclose(y1, torch.tensor([1.0, 3.0]))
    assert torch.allclose(y2, torch.tensor([1.0, 3.0, 5.0]))


def test_bizinter() -> None:
    x10 = torch.arange(0, 10)
    y10_expected = torch.tensor(
        [
            0,
            -0.813751514675042,
            1,
            2.14885899083011,
            2,
            2.14885899083011,
            3,
            3.65838444032454,
            4,
            4.5,
            5,
            5.34161555967546,
            6,
            6.85114100916989,
            7,
            6.85114100916989,
            8,
            9.81375151467504,
            9,
            4.5,
        ]
    )
    assert torch.allclose(bizinter(x10), y10_expected)


def test_corefrmod2() -> None:
    x = torch.arange(0, 10)
    a10_expected = torch.tensor(
        [
            1.581138830084188 - 1j * 0.000000000000033,
            -1.581138830084181 - 1j * 0.513743148373015,
            1.581138830084184 + 1j * 1.148764602736809,
            -1.581138830084191 - 1j * 2.176250899482820,
            1.581138830084188 + 1j * 4.866244947338653,
            14.230249470757705 + 1j * 0.000000000000009,
            1.581138830084194 - 1j * 4.866244947338653,
            -1.581138830084195 + 1j * 2.176250899482820,
            1.581138830084190 - 1j * 1.148764602736801,
            -1.581138830084190 + 1j * 0.513743148373006,
        ]
    )
    a05_expected = torch.tensor(
        [
            4.300425665961087 - 1j * 7.863204974688656,
            4.027288320118928 - 1j * 3.346581752950329,
            2.806850172683342 - 1j * 1.070282213519745,
            2.942209152373217 - 1j * 0.129308758397126,
            3.103955191410604 + 1j * 1.658974800296961,
            4.773860317626514 + 1j * 0.538277189010558,
            9.234846570973911 + 1j * 1.870142992999104,
            3.501865444145145 - 1j * 8.541826363887390,
            -4.711778345708308 - 1j * 2.680135885340919,
            -1.572836646294373 + 1j * 2.216050384301396,
        ]
    )

    assert torch.allclose(corefrmod2(x, torch.tensor(1.0)), a10_expected)
    assert torch.allclose(corefrmod2(x, torch.tensor(0.5)), a05_expected)
